<?php
/**
		*
		* PHP versions 4 and 5
		*
		* kml : Kamila Software
		* Licensed under The MIT License
		* Redistributions of files must retain the above copyright notice.
		*
		* @copyright     Jesus Baizabal
		* @link          http://baizabal.xyz
		* @mail	     baizabal.jesus@gmail.com
		* @package       cake
		* @subpackage    cake.cake.console.libs.templates.views
		* @since         CakePHP(tm) v 1.2.0.5234
		* @license       MIT License (http://www.opensource.org/licenses/mit-license.php)
		*/
?>

<?php
class ControlDeskUserControlsController extends AppController {

	var $name = 'ControlDeskUserControls';
	var $components = array('RequestHandler','Session','Search.Prg');
	var $helpers = array('Html','Form','Ajax','Javascript');



	function index() {

		// $this->ControlDeskUserControl->recursive = 0;

		$controlDeskUserControls = $this->ControlDeskUserControl->find('all');

		$this->set(compact('controlDeskUserControls'));
	}

	function view($id = null) {
		if (!$id) {
			$this->Session->setFlash(__('Invalid control desk user control', true));
			$this->redirect(array('action' => 'index'));
		}
		$this->set('controlDeskUserControl', $this->ControlDeskUserControl->read(null, $id));
	}

	function add() {

		Configure::write('debug',2);
		if (!empty($this->data)) {
			debug($this->data);
			// NOTE search in controlDesk
			$the_id = $this->data['ControlDeskUserControl']['user_id'];
			$conditionsCtrl['ControlDeskUserControl.user_id'] = $the_id;
			$getControl = $this->ControlDeskUserControl->find('all',array('conditions'=>$conditionsCtrl));

			debug($getControl);

			if (!$getControl) {
//
					if ($this->data['ControlDeskUserControl']['nomina'] == true) {
						// NOTE go to search in mssql
						$this->LoadModel('User');
						$this->LoadModel('MssqlPayroll');

						$conditionsUser['User.id'] = $the_id;
						$getTheNum = $this->User->find('first',array('conditions'=>$conditionsUser));

						debug($getTheNum['User']);
						debug($getTheNum['User']['number_id']);

						$username = $getTheNum['User']['username'];

						$getPass = $this->MssqlPayroll->getPayrollByCompany($cvecia=null,$cveare=null,$cvepue=null,$cvetra=$getTheNum['User']['number_id']);

							if (!$getPass) {
								$this->Session->setFlash(__('this user must create in with option nomina = off ', true));
								$this->redirect(array('action' => 'index'));
							} else {
								$set_pass = current($getPass)['MssqlPayroll']['numrfc'];
								// debug($set_pass);
							}
							$save_this['ControlDeskUserControl']['user_id'] = $this->data['ControlDeskUserControl']['user_id'];
							$save_this['ControlDeskUserControl']['storage'] = 1;
							$save_this['ControlDeskUserControl']['clear_key'] = $set_pass;
						} else {
							$save_this = $this->data;
						}

						// NOTE add automation of users in Gst-Cloud

						// $conditionsOcUser['OcUser.uid'] = $username;
						// $this->LoadModel('OcUser');
						//
						// debug($this->OcUser->find('first',array('conditions'=>$conditionsOcUser)));
						//
						// if (!$this->OcUser->find('first',array('conditions'=>$conditionsOcUser))) {
						// 	// NOTE create user
						// 	debug("build the user");
						// }

						debug($save_this);
						debug($username);
						debug($set_pass);

						// $usertest = 'predeterminada';
						// $url = 'http://admin:enumaelish@integradev/gstcloud/ocs/v1.php/cloud/users?search=alejandra';
						// $url = 'http://admin:enumaelish@192.168.20.100/gstcloud/ocs/v1.php/cloud/users';
						//
						// $curl = curl_init();
						// 		curl_setopt_array($curl, array(
						// 			CURLOPT_URL => "{$url}",
						// 			CURLOPT_RETURNTRANSFER => true,
						// 			CURLOPT_ENCODING => "",
						// 			CURLOPT_MAXREDIRS => 10,
						// 			CURLOPT_TIMEOUT => 30,
						// 			CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
						// 			// CURLOPT_CUSTOMREQUEST => "GET",
						// 			CURLOPT_CUSTOMREQUEST => "POST",
						// 			// CURLOPT_POSTFIELDS => "search=alejandra",
						// 			// CURLOPT_POST => "userid=\"{$username}\"",
						// 			// CURLOPT_POST => "password=\"{$set_pass}\"",
						// 			CURLOPT_POSTFIELDS => http_build_query(array('userid'=>$username,'password'=>$set_pass)),
						// 			CURLOPT_HTTPHEADER => array(
						// 				"Accept: text/xml",
						// 				"Accept-Encoding: gzip, deflate",
						// 				"OCS-APIRequest: true",
						// 				"Content-type: text/xml;charset=\"utf-8\"",
						// 				"cache-control: no-cache,no-cache"
						// 			)
						// 		)
						// );
						//
						// $response = curl_exec($curl);
						// $err = curl_error($curl);
						//
						// curl_close($curl);
						//

						// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
						// $ch = curl_init();
						//
						// curl_setopt($ch, CURLOPT_URL, 'http://admin:enumaelish@integradev/gstcloud/ocs/v1.php/cloud/users');
						// curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
						// curl_setopt($ch, CURLOPT_POST, 1);
						// curl_setopt($ch, CURLOPT_POSTFIELDS, "userid=\"$username\"&password=\"$set_pass\"");
						//
						// $headers = array();
						// $headers[] = 'Ocs-Apirequest: true';
						// $headers[] = 'Content-Type: application/x-www-form-urlencoded';
						// curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
						//
						// $response = curl_exec($ch);
						// if (curl_errno($ch)) {
						//     echo 'Error:' . curl_error($ch);
						// }
						// curl_close($ch);


						//
						// debug('SETRESPONSE');
						// print('<textarea cols="400" rows="400">');
						// // print('<pre>');
						// print_r($response);
						// // print('</pre>');
						// print('</textarea>');


						// curl -X POST http://admin:enumaelish@integradev/gstcloud/ocs/v1.php/cloud/users -d userid="usertest" -d password="password" --header "OCS-APIRequest: true"

						$command = "curl -X POST http://admin:enumaelish@integradev/gstcloud/ocs/v1.php/cloud/users -d userid=\"{$username}\" -d password=\"{$set_pass}\" -d groups[]=\"users_gst\" --header \"OCS-APIRequest: true\"";
						exec($command,$response);
						debug($response);
						$output = shell_exec($command);
						debug($output);

						// exit();

						$this->ControlDeskUserControl->create();
						if ($this->ControlDeskUserControl->save($save_this)) {
							//NOTE create a cloud user
							$this->Session->setFlash(__('The control desk user control has been saved', true));
							// exit();
							$this->redirect(array('action' => 'index'));
						} else {
							$this->Session->setFlash(__('The control desk user control could not be saved. Please, try again.', true));
						}

			} else {
					$this->Session->setFlash(__('This user already set ', true));
					$this->redirect(array('action' => 'index'));
			}
		}

		$users = $this->ControlDeskUserControl->User->find('list',array('fields'=>array('id','full_name')));
		Configure::write('debug',2);
		$this->set(compact('users'));
	}

	function edit($id = null) {
		if (!$id && empty($this->data)) {
			$this->Session->setFlash(__('Invalid control desk user control', true));
			$this->redirect(array('action' => 'index'));
		}
		if (!empty($this->data)) {
			if ($this->ControlDeskUserControl->save($this->data)) {
				$this->Session->setFlash(__('The control desk user control has been saved', true));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The control desk user control could not be saved. Please, try again.', true));
			}
		}
		if (empty($this->data)) {
			$this->data = $this->ControlDeskUserControl->read(null, $id);
		}
		$users = $this->ControlDeskUserControl->User->find('list');
		$this->set(compact('users'));
	}

	function delete($id = null) {
		if (!$id) {
			$this->Session->setFlash(__('Invalid id for control desk user control', true));
			$this->redirect(array('action'=>'index'));
		}
		if ($this->ControlDeskUserControl->delete($id)) {
			$this->Session->setFlash(__('Control desk user control deleted', true));
			$this->redirect(array('action'=>'index'));
		}
		$this->Session->setFlash(__('Control desk user control was not deleted', true));
		$this->redirect(array('action' => 'index'));
	}
}
